#!/bin/bash
# SPDX-License-Identifier: GPL-2.0+ or MIT

SH_TAP=1

if [ "x${RSEQ_TESTS_SRCDIR:-}" != "x" ]; then
	UTILSSH="$RSEQ_TESTS_SRCDIR/utils/utils.sh"
else
	UTILSSH="$(dirname "$0")/utils/utils.sh"
fi

# shellcheck source=./utils/utils.sh
source "$UTILSSH"


EXTRA_ARGS=("${@}")

REPS=1000
NR_CPUS=$(nproc)
NR_THREADS=$((6 * NR_CPUS))


function do_test()
{
	local test_name=$1
	shift
	local args=("$@")

	"$RSEQ_TESTS_BUILDDIR"/param_test "${args[@]}" -r ${REPS} -t ${NR_THREADS} "${EXTRA_ARGS[@]}"
	ok $? "Running test ${test_name}"

	"$RSEQ_TESTS_BUILDDIR"/param_test_compare_twice "${args[@]}" -r ${REPS} -t ${NR_THREADS} "${EXTRA_ARGS[@]}"
	ok $? "Running compare-twice test ${test_name}"
}

function do_tests()
{
	local args=("$@")

	do_test "spinlock" -T s "${@}"
	do_test "list" -T l "${@}"
	do_test "buffer" -T b "${@}"
	do_test "buffer with barrier" -T b -M "${@}"
	do_test "memcpy" -T m "${@}"
	do_test "memcpy with barrier" -T m -M "${@}"
	do_test "increment" -T i "${@}"
}

function do_tests_loops()
{
	local nr_loops="$1"

	do_tests -1 "${nr_loops}"
	do_tests -2 "${nr_loops}"
	do_tests -3 "${nr_loops}"
	do_tests -4 "${nr_loops}"
	do_tests -5 "${nr_loops}"
	do_tests -6 "${nr_loops}"
	do_tests -7 "${nr_loops}"
	do_tests -8 "${nr_loops}"
	do_tests -9 "${nr_loops}"
}

function do_tests_inject()
{
	local args=("$@")

	do_tests -7 -1 "${@}"
	do_tests -8 -1 "${@}"
	do_tests -9 -1 "${@}"
}


"$RSEQ_TESTS_BUILDDIR"/param_test -c
if [[ $? == 2 ]]; then
	plan_skip_all "The rseq syscall is unavailable"
else
	plan_tests $(( 2 * 7 * 37 ))
fi

diag "Default parameters"
do_tests

diag "Loop injection: 10000 loops"
do_tests_loops 10000

diag "Yield injection (25%)"
do_tests_inject -m 4 -y

diag "Yield injection (50%)"
do_tests_inject -m 2 -y

diag "Yield injection (100%)"
do_tests_inject -m 1 -y

diag "Kill injection (25%)"
do_tests_inject -m 4 -k

diag "Kill injection (50%)"
do_tests_inject -m 2 -k

diag "Kill injection (100%)"
do_tests_inject -m 1 -k

diag "Sleep injection (1ms, 25%)"
do_tests_inject -m 4 -s 1

diag "Sleep injection (1ms, 50%)"
do_tests_inject -m 2 -s 1

diag "Sleep injection (1ms, 100%)"
do_tests_inject -m 1 -s 1
